-- create a table of every cluster or warehouse that is created, and who created it
CREATE OR REPLACE TABLE usm_{{env}}.platform.creation_events AS
SELECT
t1.name,
t1.id,
t1.type,
coalesce(t2.user_name, t1.user) user
FROM (
  SELECT DISTINCT
  cluster_name name,
  concat("cluster-",cluster_id) id,
  owned_by user,
  "cluster" as type
  FROM SYSTEM.COMPUTE.CLUSTERS
  UNION
  SELECT
  request_params.clusterName name,
  request_params.clusterOwnerUserId user,
  concat("cluster-", request_params.clusterId) id,
  "cluster" as type
  FROM system.access.audit
  WHERE service_name = 'clusters'
  UNION
  SELECT
  request_params.name,
  user_identity.email as user,
  concat("warehouse-",trim( TRAILING '"}' FROM trim(LEADING '{"id":"' FROM response.result))) id,
  "warehouse" as type
  FROM system.access.audit
  WHERE service_name = 'databrickssql'
  AND action_name = 'createWarehouse' -- user_identity.email , response.result
  UNION
  SELECT *
  FROM VALUES
  ('Shared Warehouse Pro' name,'alexander.Metrocavich@evernorth.com' user,'ab8ad40a8125b991' id,'warehouse' type),
  ('Shared Warehouse Pro' name,'alexander.Metrocavich@evernorth.com' user,'32fa3d9c5b4ab3d2' id,'warehouse' type),
  ('Shared Warehouse Pro' name,'alexander.Metrocavich@evernorth.com' user,'cfc43aed2fa72e2f' id,'warehouse' type)
) t1
LEFT JOIN (
  SELECT id, user_name
  FROM usm_{{env}}.platform.users
  UNION
  SELECT id, display_name
  FROM usm_{{env}}.platform.service_principals
  UNION
  SELECT application_id, display_name
  FROM usm_{{env}}.platform.service_principals
) t2
ON t1.user = t2.id ;

-- index by id
OPTIMIZE usm_{{env}}.platform.creation_events;

-- add a unique id to each billing row that we can group by on
-- this is sweet because jobs have unique cluster ids too as well as general purpose clusters
CREATE OR REPLACE TABLE usm_{{env}}.platform.billing_usage AS
SELECT * ,
CASE
  WHEN usage_metadata.cluster_id IS NOT NULL THEN concat("cluster-", usage_metadata.cluster_id)
  WHEN usage_metadata.warehouse_id IS NOT NULL THEN concat("warehouse-",usage_metadata.warehouse_id)
  WHEN usage_metadata.job_id IS NOT NULL THEN concat("job-",usage_metadata.job_id)
  ELSE NULL
END id
FROM `system`.billing.usage;

-- index by this id
OPTIMIZE usm_{{env}}.platform.billing_usage;

-- now join the billing rows with creation events so we know who made them
-- we left join because we do not want to lose any billing rows if we have missing creation events
CREATE OR REPLACE TABLE usm_{{env}}.platform.billing_usage_with_audit_info AS
SELECT *
FROM usm_{{env}}.platform.billing_usage
LEFT JOIN usm_{{env}}.platform.creation_events
USING(id);

-- now join the billing and creation events with the prices to know what price to the dbus were
CREATE OR REPLACE TABLE usm_{{env}}.platform.billing_usage_with_audit_info_and_listing_prices AS (
  SELECT l.*, r.pricing
  FROM usm_{{env}}.platform.billing_usage_with_audit_info l
  LEFT JOIN (
    SELECT
      account_id,
      price_start_time,
      price_end_time,
      sku_name,
      cloud,
      currency_code,
      usage_unit,
      struct(
        CASE
          WHEN sku_name
          like 'ENTERPRISE_ALL_PURPOSE_COMPUTE%'
          THEN pricing.default
          * (1-0.4462)

          WHEN sku_name
          like 'ENTERPRISE_JOBS_COMPUTE%'
          THEN pricing.default
          * (1-0.60)

          WHEN sku_name
          like 'ENTERPRISE_SQL%'
          THEN pricing.default
          * (1-0.15)

          ELSE pricing.default

        END
      as default
      )
      as pricing
      FROM system.billing.list_prices
      WHERE sku_name
      like 'ENTERPRISE%'
  ) as r USING(sku_name)
);



CREATE or REPLACE TABLE usm_{{env}}.platform.leaderboard_pre AS
  SELECT CASE workspace_id
    WHEN '4315244962041036'	THEN 'intl-euro-test'
    WHEN '2526242183754071'	THEN 'intl-euro-dev'
    WHEN '903937390948931' 	THEN 'hs-bdes-test'
    WHEN '2527997857503871'	THEN 'hs-bdes-dev'
    WHEN '5629214838322243' THEN 'hs-bdes-prod'
    WHEN '4009948445792575'	THEN 'brighter-cigna-databricks-v2'
    WHEN '8759791729654491'	THEN 'edp-databricks-sbx'
    WHEN '515946335708587'	THEN 'mlcoe-dbx-dev'
    WHEN '5425976998483154'	THEN 'mlcoe-dbx-prod'
    WHEN '295062747499580'	THEN 'hs-poc'
    WHEN '922310190196067'	THEN 'sae-databricks-prod'
    WHEN '495694519135107'	THEN 'digexp-databricks-test'
    WHEN '2467188453237426'	THEN 'mlcoe-dbx-test'
    WHEN '234172798029718'	THEN 'sae-databricks-dev'
    WHEN '149802285607479'	THEN 'sae-databricks-test'
    WHEN '2648649579811016'	THEN 'digexp-databricks-prod'
    WHEN '495694519135107'	THEN 'digexp-databricks-test'
    WHEN '1064652275943973'	THEN 'digexp-databricks-dev'
    WHEN '6031270147106191'	THEN 'edp-databricks-dev'
    WHEN '142132121706207'	THEN 'edp-databricks-prod'
    WHEN '626070532816605'	THEN 'edp-databricks-test'
    ELSE workspace_id
  END workspace,
  CASE
    WHEN usage_metadata.job_id IS NOT NULL THEN 'job'
    WHEN usage_metadata.cluster_id IS NOT NULL THEN 'cluster'
    WHEN usage_metadata.warehouse_id IS NOT NULL THEN 'warehouse'
    ELSE NULL
  END cost_type,
  COALESCE(
    concat('https://en-', workspace, '.cloud.databricks.com/?o=', workspace_id, '#setting/clusters/', usage_metadata.cluster_id, '/configuration' ),
    concat('https://en-', workspace, '.cloud.databricks.com/sql/warehouses/', usage_metadata.warehouse_id, '?o=', workspace_id),
    concat('https://en-', workspace, '.cloud.databricks.com/?o=', workspace_id, '#job/', usage_metadata.job_id)
  ) link,
  COALESCE(
    custom_tags['JobName'],
    custom_tags['job_name'],
    name
  ) name,
  COALESCE(
    custom_tags['TeamName'],
    custom_tags['TEAM'],
    custom_tags['Team'],
    custom_tags['team']
  ) team,
  custom_tags['ServiceNowBA'] business_application,
  COALESCE(
    custom_tags['CostCenter'],
    custom_tags['ClaritySubProjectID']
  ) expense_center,
  usage_quantity dbus_used ,
  usage_metadata.node_type compute_type,
  usage_metadata,
  custom_tags,
  usage_date,
  sku_name,
  pricing,
  date_diff(HOUR, usage_end_time, current_timestamp()) hours_ago,
  user,
  CASE
    WHEN usage_metadata.cluster_id IS NOT NULL THEN concat("cluster-", usage_metadata.cluster_id)
    WHEN usage_metadata.warehouse_id IS NOT NULL THEN concat("warehouse-", usage_metadata.warehouse_id)
    WHEN usage_metadata.job_id IS NOT NULL THEN concat("job-", usage_metadata.job_id)
    ELSE NULL
  END id
FROM usm_{{env}}.platform.billing_usage_with_audit_info_and_listing_prices;

CREATE OR REPLACE TABLE usm_{{env}}.platform.leaderboard AS
SELECT
workspace,
id,
link,
CASE
  WHEN user IS NOT NULL THEN user
  ELSE id
END user,
cost_type,
compute_type,
sku_name,
pricing.default,
name,
team,
business_application,
expense_center,
usage_date,
last(hours_ago) hours_ago,
sum(dbus_used) as dbus_used
FROM usm_{{env}}.platform.leaderboard_pre
GROUP BY workspace, id, link, user, cost_type, compute_type, sku_name, pricing, name, team, business_application, expense_center, usage_date;

DROP TABLE usm_{{env}}.platform.creation_events;
DROP TABLE usm_{{env}}.platform.billing_usage;
DROP TABLE usm_{{env}}.platform.billing_usage_with_audit_info;
DROP TABLE usm_{{env}}.platform.leaderboard_pre;
DROP TABLE usm_{{env}}.platform.billing_usage_with_audit_info_and_listing_prices;

CREATE OR REPLACE TABLE USM_{{env}}.PLATFORM.CLUSTERS AS (
  -- SELECT THE MOST RECENT RECORD FOR EVERY CLUSTER BY ID
  WITH ADDED_ROW_NUMBER AS (
    SELECT *, ROW_NUMBER() OVER(PARTITION BY CLUSTER_ID ORDER BY CHANGE_TIME DESC) AS ROW_NUMBER
    FROM SYSTEM.COMPUTE.CLUSTERS
    WHERE DELETE_TIME IS NOT NULL
  )
  SELECT CASE workspace_id
    WHEN '4315244962041036'	THEN 'intl-euro-test'
    WHEN '2526242183754071'	THEN 'intl-euro-dev'
    WHEN '903937390948931' 	THEN 'hs-bdes-test'
    WHEN '2527997857503871'	THEN 'hs-bdes-dev'
    WHEN '5629214838322243' THEN 'hs-bdes-prod'
    WHEN '4009948445792575'	THEN 'brighter-cigna-databricks-v2'
    WHEN '8759791729654491'	THEN 'edp-databricks-sbx'
    WHEN '515946335708587'	THEN 'mlcoe-dbx-dev'
    WHEN '5425976998483154'	THEN 'mlcoe-dbx-prod'
    WHEN '295062747499580'	THEN 'hs-poc'
    WHEN '922310190196067'	THEN 'sae-databricks-prod'
    WHEN '495694519135107'	THEN 'digexp-databricks-test'
    WHEN '2467188453237426'	THEN 'mlcoe-dbx-test'
    WHEN '234172798029718'	THEN 'sae-databricks-dev'
    WHEN '149802285607479'	THEN 'sae-databricks-test'
    WHEN '2648649579811016'	THEN 'digexp-databricks-prod'
    WHEN '495694519135107'	THEN 'digexp-databricks-test'
    WHEN '1064652275943973'	THEN 'digexp-databricks-dev'
    WHEN '6031270147106191'	THEN 'edp-databricks-dev'
    WHEN '142132121706207'	THEN 'edp-databricks-prod'
    WHEN '626070532816605'	THEN 'edp-databricks-test'
    ELSE workspace_id
  END workspace, *
  FROM ADDED_ROW_NUMBER
  WHERE ROW_NUMBER = 1

);
